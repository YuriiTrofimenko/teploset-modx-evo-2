<p><img class="justifyleft" style="float: left; margin: 10px;" src="assets/images/thumb103-a0eff343de2a78512cc55658725f17d7-97287c5e825c4f3a7b9e488539da09fd.jpg" width="200" height="150"><span style="font-family: 'times new roman',times,serif; font-size: 14pt;">Підприємство &laquo;Маріупольтепломережа&raquo; організовано в 1967 році.</span></p>
<p style="text-align: justify;"><span style="font-family: 'times new roman',times,serif; font-size: 14pt;">16.09.05 р рішенням виконкому міської ради №1272 було організовано комунальне комерційне підприємство &laquo;Маріупольтепломережа&raquo;. Основне його завдання - безперебійне і надійне забезпечення споживачів централізованим теплопостачанням і постачанням горячої води.</span></p>
<p style="text-align: justify;"><span style="font-size: 14pt;"><span style="font-family: 'times new roman',times,serif;">Підприємство забезпечує теплом 2519 об'єктів, в тому числі: 1887 житлових будинків, 8</span><span style="font-family: 'times new roman',times,serif;">7</span><span style="font-family: 'times new roman',times,serif;"> дитячих установ, 34 лікарень, 3 притулки, 69 школи.</span></span></p>
<p style="text-align: justify;"><span style="font-family: 'times new roman',times,serif; font-size: 14pt;">Основним споживачем теплової енергії є населення, на частку якого припадає до 80% реалізованого тепла, решта 20% тепла реалізуються бюджетним та іншим підприємствам, установам і організаціям.</span></p>
<p style="text-align: justify;"><span style="font-family: 'times new roman',times,serif; font-size: 14pt;">На сьогоднішній день підприємство експлуатує:</span></p>
<p style="text-align: justify;"><span style="font-family: 'times new roman',times,serif; font-size: 14pt;">66 котелень, в т.ч. 61 газових; 5 твердопаливних, 59 ЦТП, 16 ТП, 25 бойлерних; теплових мереж - 951,957 км в 1-трубному обчисленні.</span></p>
<p style="text-align: justify;"><span style="font-family: 'times new roman',times,serif; font-size: 14pt;">Сумарна встановлена потужність котелень 1171,383 Гкал/год.</span></p>
<p style="text-align: justify;">&nbsp;</p>
<p style="text-align: justify;"><span style="font-family: 'times new roman',times,serif; font-size: 14pt;">КОМУНАЛЬНЕ КОМЕРЦІЙНЕ ПІДПРИЄМСТВО МАРІУПОЛЬСЬКОЇ МІСЬКОЇ РАДИ &laquo;МАРІУПОЛЬТЕПЛОМЕРЕЖА&raquo;</span></p>
<p style="text-align: justify;"><span style="font-family: 'times new roman',times,serif; font-size: 14pt;">Юридична адреса: вул. Гризодубової, 1, м. Маріуполь, Донецька область, Україна, 87534</span></p>
<p style="text-align: justify;"><span style="font-family: 'times new roman',times,serif; font-size: 14pt;">Електронна пошта: teploset@mariupolrada.gov.ua</span></p>
<p style="text-align: justify;"><span style="font-family: 'times new roman',times,serif; font-size: 14pt;">Веб сайт:</span></p>
<p style="text-align: justify;"><span style="font-family: 'times new roman',times,serif; font-size: 14pt;">Телефон: (0629) 34-85-40</span></p>
<p style="text-align: justify;"><span style="font-family: 'times new roman',times,serif; font-size: 14pt;">Факс: (0629) 52-68-52</span></p>